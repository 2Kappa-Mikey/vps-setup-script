#!/usr/bin/env bash
#
# Description: Автотест скорости загрузки/выгрузки с интерактивным выбором сервера
#
# Copyright (C) 2015 - 2020 Teddysun <i@teddysun.com>
# Модифицировано: Kappa Mikey, добавлена интерактивность
#

trap _exit INT QUIT TERM

_red() {
    printf '\033[0;31;31m%b\033[0m' "$1"
}

_green() {
    printf '\033[0;31;32m%b\033[0m' "$1"
}

_yellow() {
    printf '\033[0;31;33m%b\033[0m' "$1"
}

_blue() {
    printf '\033[0;31;36m%b\033[0m' "$1"
}

_exists() {
    local cmd="$1"
    if eval type type > /dev/null 2>&1; then
        eval type "$cmd" > /dev/null 2>&1
    elif command > /dev/null 2>&1; then
        command -v "$cmd" > /dev/null 2>&1
    else
        which "$cmd" > /dev/null 2>&1
    fi
    local rt=$?
    return ${rt}
}

_64bit(){
    if [ "$(getconf WORD_BIT)" = '32' ] && [ "$(getconf LONG_BIT)" = '64' ]; then
        return 0
    else
        return 1
    fi
}

_exit() {
    _red "\nСкрипт был прерван.\n"
    rm -fr speedtest.tgz speedtest-cli benchtest_*
    exit 1
}

next() {
    printf "%-70s\n" "-" | sed 's/\s/-/g'
}

speed_test() {
    local server_id="$1"
    local nodeName="$2"
    if [ -z "$server_id" ]; then
        ./speedtest-cli/speedtest --progress=no --accept-license --accept-gdpr > ./speedtest-cli/speedtest.log 2>&1
    else
        ./speedtest-cli/speedtest --progress=no --server-id="$server_id" --accept-license --accept-gdpr > ./speedtest-cli/speedtest.log 2>&1
    fi
    if [ $? -eq 0 ]; then
        local dl_speed
        dl_speed=$(awk '/Download/{print $3" "$4}' ./speedtest-cli/speedtest.log)
        local up_speed
        up_speed=$(awk '/Upload/{print $3" "$4}' ./speedtest-cli/speedtest.log)
        local latency
        latency=$(awk '/Latency/{print $2" "$3}' ./speedtest-cli/speedtest.log)
        if [[ -n "$dl_speed" && -n "$up_speed" && -n "$latency" ]]; then
            printf "\033[0;33m%-18s\033[0;32m%-18s\033[0;31m%-20s\033[0;36m%-12s\033[0m\n" " ${nodeName}" "${up_speed}" "${dl_speed}" "${latency}"
        else
            _red "Ошибка: не удалось получить результаты теста.\n"
        fi
    else
        _red "Ошибка выполнения speedtest для сервера: ${nodeName}\n"
    fi
}

ipv4_info() {
    local org
    org=$(wget -q -T10 -O- ipinfo.io/org)
    local city
    city=$(wget -q -T10 -O- ipinfo.io/city)
    local country
    country=$(wget -q -T10 -O- ipinfo.io/country)
    local region
    region=$(wget -q -T10 -O- ipinfo.io/region)
    [[ -n "$org" ]] && echo " Organization          : $(_blue "$org")"
    [[ -n "$city" && -n "$country" ]] && echo " Location              : $(_blue "$city / $country")"
    [[ -n "$region" ]] && echo " Region                : $(_blue "$region")"
}

install_speedtest() {
    if [ ! -e "./speedtest-cli/speedtest" ]; then
        _64bit && sys_bit=x86_64 || sys_bit=i386
        url1="https://install.speedtest.net/app/cli/ookla-speedtest-1.0.0-${sys_bit}-linux.tgz"
        url2="https://dl.lamp.sh/files/ookla-speedtest-1.0.0-${sys_bit}-linux.tgz"
        wget --no-check-certificate -q -T10 -O speedtest.tgz ${url1}
        if [ $? -ne 0 ]; then
            wget --no-check-certificate -q -T10 -O speedtest.tgz ${url2}
            [ $? -ne 0 ] && _red "Ошибка: не удалось загрузить speedtest-cli.\n" && exit 1
        fi
        mkdir -p speedtest-cli
        tar zxf speedtest.tgz -C ./speedtest-cli
        chmod +x ./speedtest-cli/speedtest
        rm -f speedtest.tgz
    fi
}

# Проверка наличия wget
! _exists "wget" && _red "Ошибка: команда wget не найдена. Установите wget и повторите попытку.\n" && exit 1

# Открываем дескриптор 3 для чтения ввода из терминала
exec 3</dev/tty || { _red "Ошибка: не удалось открыть /dev/tty для ввода.\n"; exit 1; }

next
install_speedtest

printf "%-18s%-18s%-20s%-12s\n" "Node Name" "Upload Speed" "Download Speed" "Latency"

while true; do
    echo ""
    echo "Выберите сервер для теста скорости:"
    echo " 1) Amsterdam NL (ID: 52365)"
    echo " 2) Dronten NL (ID: 68029)"
    echo " 3) Frankfurt DE (ID: 40094)"
    echo " 4) Frankfurt-Main DE (ID: 44081)"
    echo " 5) Moscow MGTS RU (ID: 6827)"
    echo " 6) Vilnius LT (ID: 8009)"
    echo " 7) Stockholm SWE (ID: 6061)"
    echo " 8) Helsinki FIN (ID: 57807)"
    echo " 9) Vallo FIN (ID: 56225)"
    echo " 0) Default server (без указания server-id)"
    echo " q) Выход"
    read -u 3 -rp "Введите номер 
